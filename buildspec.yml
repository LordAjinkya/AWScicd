version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "your-ecr-repo-name"
    IMAGE_TAG: "latest"
  exported-variables:
    - AWS_ACCOUNT_ID
    - AWS_DEFAULT_REGION
    - IMAGE_REPO_NAME
    - IMAGE_TAG

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo "Checking if ECR repository exists..."
      - aws ecr describe-repositories --repository-names $IMAGE_REPO_NAME || aws ecr create-repository --repository-name $IMAGE_REPO_NAME
      - echo "Pre-build phase completed."

  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t "$IMAGE_REPO_NAME:$IMAGE_TAG" .
      - docker tag "$IMAGE_REPO_NAME:$IMAGE_TAG" "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"
      - echo "Build phase completed."

  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG" || { echo "Docker push failed"; exit 1; }
      - echo "Docker image pushed successfully."
      - echo "Updating task definition..."
      - sed -i "s|<IMAGE>|$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG|" task-def.json
      - cp task-def.json task-def-updated.json
      - echo "Task definition updated successfully."

artifacts:
  files:
    - task-def-updated.json
    - appspec.yaml
  discard-paths: yes
